<?php

namespace AppBundle\Repository;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\NoResultException;

/**
 * JobRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class JobRepository extends EntityRepository
{
    public function searchFor($value)
    {
        $em = $this->getEntityManager();
        $qb = $em->createQueryBuilder('t');
        $query = $qb->select('j.location, j.id, j.position, j.company, ca.name')
            ->from('AppBundle:Job', 'j')
            ->join('j.category', 'ca')
            ->where('j.company LIKE :property_id OR ' .
            'j.type LIKE :property_id OR ' .
            'j.position LIKE :property_id OR ' .
            'j.location LIKE :property_id')
            ->setParameter('property_id', $value)
            ->getQuery();
        try {
            $result = $query->getResult();
        } catch (NoResultException $e) {
            $result = [];
        }
        return $result;
    }

    public function getLatestJobs($max = 10)
    {
        $em = $this->getEntityManager();
        $qb = $em->createQueryBuilder('t');
        $query = $qb->select('j.location, j.id, j.position, j.company, ca.name')
            ->from('AppBundle:Job', 'j')
            ->join('j.category', 'ca')
            ->setMaxResults($max)
            ->getQuery();
        try {
            $result = $query->getResult();
        } catch (NoResultException $e) {
            $result = [];
        }
        return $result;
    }

    public function getByCategoryName($name)
    {
        $em = $this->getEntityManager();
        $qb = $em->createQueryBuilder('t');
        $query = $qb->select('j.location, j.id, j.position, j.company, ca.name')
            ->from('AppBundle:Job', 'j')
            ->join('j.category', 'ca')
            ->where('ca.name = :category_name')
            ->setParameter('category_name', $name)
            ->getQuery();
        try {
            $result = $query->getResult();
        } catch (NoResultException $e) {
            $result = [];
        }
        return $result;
    }

    public function getAll()
    {
        $em = $this->getEntityManager();
        $qb = $em->createQueryBuilder('t');
        $query = $qb->select('j.location, j.id, j.position, j.company, ca.name')
            ->from('AppBundle:Job', 'j')
            ->join('j.category', 'ca')
            ->getQuery();
        try {
            $result = $query->getResult();
        } catch (NoResultException $e) {
            $result = [];
        }
        return $result;
    }
}
